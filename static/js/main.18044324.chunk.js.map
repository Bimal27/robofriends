{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKC,UAAU,uDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACE,6BAAKF,IACL,4BAAIC,WCeKK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACG,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACR,OACC,cAAC,EAAD,CAENR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHfS,SCMGC,EAdG,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC/B,OACC,qBAAKV,UAAU,MAAf,SACC,uBAAOA,UAAU,mCACjBW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEEI,EARA,SAACC,GACf,OACO,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACEJ,EAAMK,YCwCDC,G,wDApCd,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAdzC,EAAKC,MAAM,CACVvB,OAAQ,GACRK,YAAa,IAJD,E,qDAQX,WAAoB,IAAD,OAClBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAS3C,WAAS,IAAD,OACDC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAC/C,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAElE,OACA,sBAAKpC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAYU,aAAcwB,KAAKZ,iBAC/B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ6B,a,GA9BLK,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.18044324.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\treturn(\n\t\t<div className=' tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t  <img alt='robots' src={`https://robohash.org/${id}?200*200`} />\n\t\t  <div>\n\t\t    <h2>{name}</h2>\n\t\t    <p>{email}</p>\n\t\t  </div>\n\t\t</div>\n\n\t);\t\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n\treturn(\n\t\t  <div>\n\t\t\t {\n\t\t\t  robots.map((user, i) => {\n  \t            return (\n  \t           \t <Card  \n\t\t\t  \t\tkey={i} \n\t\t\t  \t    id={robots[i].id} \n\t\t\t  \t    name={robots[i].name} \n\t\t\t  \t    email={robots[i].email}\n  \t                \n  \t                />\n  \t             );\n               })\n\t\t\t }\n          </div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield,searchChange}) =>{\n\treturn(\n\t\t<div className='pa2'>\n\t\t\t<input className='pa3 ba b--green bg-lightest-blue'\n\t\t\ttype='search' \n\t\t\tplaceholder='search robots' \n\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\t\n\n\t);\n\t    \n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n        <div style={{overflowY: 'scroll', border:'5px solid black', height:'800px'}}>\n         {props.children}\n        </div>\n\t);\n};\n\nexport default Scroll;","import React, { Component }from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport Scroll from './Scroll';\nimport './App.css';\n\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state={\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\n\t\t}\n\t}\n    componentDidMount(){\n    \tfetch('https://jsonplaceholder.typicode.com/users')\n    \t.then(response=> response.json())\n    \t.then(users => this.setState({ robots: users}));\n    \t\n    }\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value })\n\t\t\n\t}\n\n\trender(){\n\t\tconst filteredRobots = this.state.robots.filter(robots =>{\n\t\t return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t})\n\t\treturn (\n\t\t<div className='tc'>\n\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t<SearchBox  searchChange={this.onSearchChange}/>\n\t\t\t<Scroll>\n\t\t\t  <CardList robots={filteredRobots}/>\n\t\t\t</Scroll>\n\t\t</div>\t\n\t\t);\n\t}\n\t\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}